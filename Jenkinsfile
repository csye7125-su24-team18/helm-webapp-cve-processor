pipeline {
    agent any
    environment {
        GITHUB_PAT = credentials('github_pat')
        DOCKER_CREDS = credentials('dockerhub-credentials')
        DOCKER_REGISTRY = 'hsa404/assignments'
    }

    stages {

        stage('Check Commit Message') {
            when{
                not{
                    branch 'main'
                
                }
            }
              
            steps{
                script{
                    String commitMessage = sh(script: 'git log -1 --pretty=%B', returnStdout: true).trim();
                     sh """
                        if [ ! -f commitlint.config.js ]; then
                            echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
                        fi
                    """
                    echo "${commitMessage}" | commitlint
                }
                
            }
            
        }
   
        stage ('Check Linting') {
            steps {
                script {
                    def lintResult = sh(script: 'helm lint .', returnStatus: true)
                    if (lintResult != 0) {
                        error 'Helm lint failed'
                    }
 
                    // Run helm template
                    def templateResult = sh(script: 'helm template .', returnStatus: true)
                    if (templateResult != 0) {
                        error 'Helm template failed'
                    }
                }
            }
        }    


        stage ('Cleanup') {
            steps {
                echo "Cleaning up the code"
            }
        }

    
    }
}

